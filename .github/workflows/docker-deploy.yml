name: Build & Push Docker Image (dev)

on:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.tagger.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate new version tag
        id: tagger
        run: |
          git fetch --tags
          latest=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$latest" ]; then
            new_tag="v1.0.0"
          else
            version=$(echo "$latest" | sed 's/^v//')
            IFS='.' read -r major minor patch <<< "$version"
            patch=$((patch + 1))
            new_tag="v$major.$minor.$patch"
          fi
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: üõ†Ô∏è Build Docker image using Compose
        run: |
          docker compose build app

  release:
    name: Create Git Tag
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create & Push Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag ${{ needs.build.outputs.image-tag }}
          git push origin ${{ needs.build.outputs.image-tag }}

  deploy:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [build, release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Image
        run: |
          TAG=${{ needs.build.outputs.image-tag }}
          docker tag laravel-app ${{ secrets.DOCKER_REPO }}:$TAG
          docker tag laravel-app ${{ secrets.DOCKER_REPO }}:latest
          docker push ${{ secrets.DOCKER_REPO }}:$TAG
          docker push ${{ secrets.DOCKER_REPO }}:latest
